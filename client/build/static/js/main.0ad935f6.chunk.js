(this.webpackJsonpclient=this.webpackJsonpclient||[]).push([[0],{14:function(e,t,n){"use strict";n.r(t);var o=n(0),i=n.n(o),a=n(8),s=n.n(a),r=n(4),l=n(2),c=n(1),h=function(){return Object(c.jsxs)("div",{children:[Object(c.jsx)("h1",{children:"REST API Documentation"}),Object(c.jsxs)("p",{children:["The main endpoint is:"," ",Object(c.jsx)("a",{href:"https://min-to-win.netlify.app/api-v1",target:"_blank",rel:"noopener noreferrer",children:"https://min-to-win.netlify.app/api-v1"})]}),Object(c.jsx)("h2",{children:"Data Response"}),Object(c.jsxs)("p",{children:["Responses are sent as a JSON object with a ",Object(c.jsx)("code",{children:'"data"'})," field containing the information for a single game, or as an array with a list of games."]}),Object(c.jsx)("h3",{children:"Response for single game"}),Object(c.jsx)("pre",{style:{whiteSpace:"pre-wrap"},children:'{\n  "success": true,\n  "data": {\n    "_id": "618dc9f76417fb53ec9459bd",\n    "title": "Face the Cookie",\n    "description": "This is one of the more delicious games on the roster. Each player has a cookie on their forehead. Using only their facial muscles, they will need to move this cookie, to their mouth. If a cookie falls to the ground during the attempt, the person must take another cookie and start all over again.",\n    "materials": [\n        "Cookies"\n    ],\n    "type": "Head to Head",\n    "demoVideo": "https://youtu.be/HljLGW45_-E",\n    "gameId": 1\n  }\n}'}),Object(c.jsx)("h3",{children:"Response for list of games"}),Object(c.jsx)("pre",{style:{whiteSpace:"pre-wrap"},children:'{\n    "success": true,\n    "data": [\n        {\n            "_id": "618dc9f76417fb53ec9459bd",\n            "title": "Face the Cookie",\n            "description": "This is one of the more delicious games on the roster. Each player has a cookie on their forehead. Using only their facial muscles, they will need to move this cookie, to their mouth. If a cookie falls to the ground during the attempt, the person must take another cookie and start all over again.",\n            "materials": [\n                "Cookies"\n            ],\n            "type": "Head to Head",\n            "demoVideo": "https://youtu.be/HljLGW45_-E",\n            "gameId": 1\n        },\n        {\n            "_id": "618dc9f76417fb53ec9459be",\n            "title": "Whippersnapper",\n            "description": "Each player will be given a towel or a rug and will have a box a certain distance away from them. The front part of the cloth will be weighted down. A ping pong ball will be placed on the rug. You will need to flick the cloth \u2013 and the ball \u2013 upwards using the two free ends of the cloth. You will need to get the ball into the box with this method.",\n            "materials": [\n                "Towel or rug for each player",\n                "Ping pong balls",\n                "Boxes"\n            ],\n            "type": "Head to Head",\n            "demoVideo": "https://youtu.be/sojMlUNhLos",\n            "gameId": 2\n        },\n        {\n            "_id": "618dc9f76417fb53ec9459bf",\n            "title": "Nose Dive",\n            "description": "Here the contestants rely on petroleum jelly (or something similar) and a bowl full of cotton balls. The goal is to rub the jelly on your nose and use it to pick up the cotton balls. Once the cotton ball has stuck to your nose, you will need to walk across the room and deposit the ball in another bowl. You will then need to go back and repeat the process.",\n            "materials": [\n                "Petroleum Jelly",\n                "Cotton balls"\n            ],\n            "type": "Head to Head",\n            "demoVideo": "https://youtu.be/dFFtXUDxhuU",\n            "gameId": 3\n        }\n    ]\n}'}),Object(c.jsx)("h2",{children:"Routes"}),Object(c.jsx)("h3",{children:"/games?limit=:limit"}),Object(c.jsx)("p",{children:"Returns a list of games with the given limit (default=20)."}),Object(c.jsx)("h3",{children:"/games/:gameId"}),Object(c.jsxs)("p",{children:["Returns the game with the specific ",Object(c.jsx)("code",{children:"gameId"}),"."]})]})},d=function(){return console.log(Object({NODE_ENV:"production",PUBLIC_URL:"",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0,REACT_APP_API_ENDPOINT:"https://min-to-win.netlify.app/api-v1"})),console.log("https://min-to-win.netlify.app/api-v1"),Object(c.jsxs)("div",{children:[Object(c.jsx)("h1",{children:"Landing Page"}),Object(c.jsxs)("p",{children:["Hello! This is eventually going to be a wiki for all the Minute to Win It games I scraped from the"," ",Object(c.jsx)("a",{href:"https://challengestodo.com/minute-to-win-it-games/",target:"_blank",rel:"noopener noreferrer",children:"Challenges To Do website"}),"."]}),Object(c.jsxs)("p",{children:["But for now, only the API is set up at"," ",Object(c.jsx)("a",{href:"".concat("https://min-to-win.netlify.app/api-v1"),target:"_blank",rel:"noopener noreferrer",children:"https://min-to-win.netlify.app/api-v1"}),". Be sure to ",Object(c.jsx)(r.b,{to:"/api/doc",children:"read the docs"})," first."]}),Object(c.jsx)("p",{children:"Please also forgive the lame styling \ud83d\ude05"}),Object(c.jsxs)("p",{children:["Built by:"," ",Object(c.jsx)("a",{href:"https://twitter.com/geraldinedesu",target:"_blank",rel:"noopener noreferrer",children:"@geraldiner"})," ","More projects at:"," ",Object(c.jsx)("a",{href:"https://geraldiner.com",target:"_blank",rel:"noopener noreferrer",children:"https://geraldiner.com"})]})]})},p=function(){return Object(c.jsxs)("div",{children:[Object(c.jsx)(r.b,{to:"/",children:"Home"}),Object(c.jsx)("br",{}),Object(c.jsx)(r.b,{to:"/api/doc",children:"API"})]})},j=function(){return Object(c.jsx)(r.a,{children:Object(c.jsxs)("div",{className:"app",children:[Object(c.jsx)(p,{}),Object(c.jsxs)(l.c,{children:[Object(c.jsx)(l.a,{exact:!0,path:"/",element:Object(c.jsx)(d,{})}),Object(c.jsx)(l.a,{exact:!0,path:"/api/doc",element:Object(c.jsx)(h,{})})]})]})})};s.a.render(Object(c.jsx)(i.a.StrictMode,{children:Object(c.jsx)(j,{})}),document.getElementById("root"))}},[[14,1,2]]]);
//# sourceMappingURL=main.0ad935f6.chunk.js.map